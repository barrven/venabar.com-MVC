-: Quick, what I want you to do is pick somebody who you call on the phone a lot and tell me what their phone number is. Now, I'm not talking about somebody like critical, like one of your kids, or your spouse, or somebody like that. We tend to memorize those numbers. I'm talking about that person from work or school that you call a lot, but you can't actually know their phone number. Why can we get away with that? The reason is, is because we use contact lists on our phones. So whenever we meet somebody new, we enter in their phone number and their name. But from there on in, we just go ahead, and hit their name, and we get to it. Well, the same thing happens on the internet. All around the internet, we have all of these computers, and all of these computers have IP addresses, and that's how computers communicate is from IP address to IP address. The problem with computers is that they have to deal with these horrible things called human beings, and we're just terrible at trying to remember that a particular website is 175.16.44.3, and we'd rather type in things like www.totalsem.com. So what we're looking at is a contact list for the internet that we call DNS. Now, DNS has only one job, and that is to take these things called fully qualified domain names. For example, www.totalsem.com. That's one example. And what it does is it then figures out what IP address is associated with that. When you go into a web browser and you type in www.totalsem.com and hit Enter, what's actually taking place is the DNS system is resolving that name to a known IP address, and then it sends out the packet. You don't see any of this, but it's happening. So DNS makes our lives absolutely fantastic. In fact, DNS replaced something called the host file. And the host file lasted as the primary way to resolve names into the mid-1990s. And for the record, every computer on Earth still has a host file. Here, I wanna show you an example of a host file from way back in the day. Take a look at this. So what you're seeing here is a bunch of IP addresses and then names of individual computers. Back in the old days, what would happen is that if you wanted to join the internet, you would type in your IP address, and you'd give your computer some name, and then you would submit that. And then every morning at 3:00 AM, that host file was distributed to every single computer on the internet. And you can imagine after the internet got past a few thousand computers, this was a nutty, nutty way to do things. So while host files still exist, DNS is now king. So to really understand DNS, let's go through an example. DNS begins through these clusters of super powerful DNS servers that are spread all around the world called the root servers. So the root servers control one fully qualified domain name called dot. I'll show you how this works in a second. Underneath this are tens of thousands of clusters of computers who are all in charge of certain what we call first level domain, for example, like dot-com, dot-edu, dot-gov. There's lots of these. There's seven primaries and then a lot of secondary ones as well. And there's tens of thousands of these. And then underneath this are hundreds of thousands of DNS servers that control second level domains. Like, for example, there is a computer that controls totalsem.com domain. Also, by the way, this one computer could also handle probably about 30 or 40 other domains. It just depends how much requests they get. Something like google.com, it's gonna have hundreds of DNS servers whose only job is to handle that one google.com just because of the amount of traffic they get. Now, inside this computer is a sheet of paper, and it'll have things like www, and then it'll say whatever that IP address is. Now, this entirety is our DNS. So what happens now, here's my computer down here, and what I first have to do is connect to a DNS server. Now, this DNS server is not what we call an authoritative server. These are all authoritative. This guy's job is just to help us find stuff. So what's gonna happen here is let's say I open up a web browser on my computer and I want to go to www.totalsem.com. So the first thing that's gonna happen is because we have a DNS server entered into our computers, it has to be typed in or provided by DHCP, is that the moment you hit www.totalsem.com and hit Enter on your web browser, it will automatically go up to your DNS server and you'll ask the DNS server the simple question: Do you know what the IP address for www.totalsem.com is? We'll pretend for the moment that he doesn't, but what this server does have is a list of all the IP addresses of all the root servers all over the world, and he's gonna pick one based on geography, whoever responds fastest, and he's then gonna go up to that root server, and he is gonna go, "Oh, great root server. Do you know who www.totalsem.com is?" And the root server's going to say, "Nope, but I know where the dot-com servers are. In fact, I know where the closest one is for you." And then your DNS server's gonna go, "Oh, thank you." So now, he has that IP address. Now, your DNS server is going to go to that dot-com server, and he is gonna go, "Oh great dot-com server. Do you know the IP address for www.totalsem.com?" And the dot-com server will say, "No, I do not know, but I do know who the authoritative server for totalsem.com is." So now that your DNS server has that, he goes to the authoritative server for totalsem.com and he goes, "Oh, great, totalsem.com DNS server. Do you have the IP address for www.totalsem.com?" And he says, "Yes, I do," and he hands you the address. Okay, he hands the DNS server the address. The DNS server, in kind, then sends it down to you, and you go ahead and now start hitting that website. You've actually seen this in action. Next time you open up a web browser and you type in a webpage that you've probably never gone to before, you're gonna notice a little bit of a stutter. And if you look in the lower left-hand corner, most web browsers have this, it'll say, "Waiting for..." whatever you're trying to get to. That's the DNS process at work. However, sometimes it works a lot faster, and let me show you why. It all boils down to caching. Now, once your computer asks for www.totalsem.com, your computer will keep a copy of that IP address internally in itself. Also, your DNS server will keep a copy of that as well. So if somebody else who uses the same DNS server suddenly goes, "I need to get to www.totalsem.com," it's like, pow! You instantly get the answer because he will keep a copy for a certain amount of time. We call that caching. So where do these fully qualified domain names come from? Well, you can't just type in anything. I can't sit here and go, "I wanna be google.com." Somebody might not be happy with that. So we go through a registration process. We register a unique name. That name, once it's verified is unique, is now yours, usually have to pay somebody a little bit of money to register that particular fully qualified domain. But once you have it, you then assign it to a DNS server. And there's lots of services out there that'll be like, "We will register you a domain name and we'll set up a DNS server. You can have a web interface, so you can configure your DNS server." You can all be handled from the top like that. And once you've got that, you can then begin adding your own wwws, or hub, or Mike, or whatever you want into that. The only limitation to DNS is that it has a 256-character limit. That even includes the dots. So you need to be careful with that. The beautiful part about DNS is that 98% of the time, it works perfectly well. It's just another 2% where it can be a little frustrating. Instructor: Thanks for that, Mike. In addition to utilizing things such as spam gateways to handle overcoming plethora of spam that we receive on a daily basis, we also have multiple ways utilizing some neat new technologies within DNS to help verify the authenticity of not only messages themselves, but the senders of those messages. So to illustrate that, let's take a look at two individuals. Now, we have one person here, a sender, and the other person is a receiver. And for purposes of this demo, we're gonna assume that they're both on separate domains. Now, the sender's domain can actually utilize a new thing in DNS called DMARC, D-M-A-R-C, which stands for Domain-based Message Authentication, Reporting, and Conformance. And basically, what this domain can do is enter a DMARC record in its DNS to verify who it is, and also to help prevent spoofing of that domain, which is great for if you're a domain administrator because website and domain spoofing is becoming an increasing concern. Now, when the sender sends the receiver the message, he can utilize a form of message authentication and signature called DKIM or DomainKeys Identified Mail. And this is basically a way for the sender to either sign the entire message or parts of the message to verify who they are. And that way, the receiver's mail provider can actually verify that through cryptography that that person has provided, or that message has provided the correct DKIM signature. And then finally, that actual mailbox provider themselves can use what's called Sender Policy Framework, or SPF, to actually verify that that is an authorized mail server and is published in the DNS record of that domain. So again, we have multiple additional ways to handle the ever-increasing task of spam management.