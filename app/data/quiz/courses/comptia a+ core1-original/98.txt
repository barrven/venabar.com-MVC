-: Getting a basic virtual machine up and running isn't too terribly challenging other than making sure you know how to run the operating system you're installing. So what I want to do in this episode is take it a little click further than where we were and show you some of the extra features, some of the more advanced aspects, that you can see on pretty much any hypervisor. So let's start off by taking a look at my screen right here. And you'll notice, I've got two virtual machines running. This is an old copy of Windows 7 over here, and then on the right is a Windows 10. Now one of the things, it's kind of hard for me to show you, but one of the things I can't do is I can't get out of this. Once I click inside here, I'm stuck. And if you look at the lower right hand corner down here, you'll see it says "Right Ctrl." So I actually have to hit the right Control button to get my mouse out. Now on this Windows 10 system, I don't have that same problem. (mouse clicking) The other nice thing in my Windows 10 system is watch this. It literally changes the resolution of the screen based on the shape of my window. Sometimes it takes a moment, but it it will keep changing its shape. I don't have that same option over here on my Windows 7 system. All of these are little extra features that you get with the Extension Pack that comes with VirtualBox. So you don't have to have the Extension Pack, but boy, it's got a lot of fun little digga-doggles and doodads that make your virtual machine a little bit more fun. Okay, let's go ahead and play with this a little bit. Now, one of the things you gotta be aware of is that when a machine is running, you cannot mess with a lot of features. For example, I can add or remove optical drives, but for example, I couldn't install a hard drive right now. What I want to show you, here is a Powered Off system. Now if I go into Settings, I can do just about anything. For example, here's Storage. Right now, I've got exactly one virtual hard drive, but I can add another one. (mouse clicking) So I want to click on Create a new disk. I'll go with the VDI Image, Dynamically allocated. (keyboard keys clicking) And call it anything I want. Set the size. I'm gonna make sure that sits over on my D drive. (mouse clicking) And create it. Here's another little trick for you folks who are studying for the A+. A lot of times, you're gonna have questions about disk management that's on the A+, and it wants you to mess with lots of drives and things like that. Instead of going out and buying a real computer (chuckles) and adding a bunch of drives into it, just set yourself up a virtual machine. Install Windows in that virtual machine. Remember, you don't have to pay for a copy, but it won't allow you to change your screen saver, for example. So you can use a unlicensed copy for up to 30 days. So go ahead and just put it in there, into a virtual machine, and just have some fun. You want to play with drives all day long? This is a place to do it is by making virtual hard drives and just playing with them. Another great reason to be using virtual machines. Another place where virtualization really is handy is in networking. Now networking's a little bit tricky to wrap your head around. You're definitely gonna need to be understanding things like NAT and things like that, which we cover in other episodes. However, once you've got this down pat, you can do some really cool stuff. Let me show you. (mouse clicking) So I can go to Devices, and by the way, I can do this while the virtual machine's running. I don't have to shut off the virtual machine. So I can click on Network Settings. And right now, he's set to a NAT Network. We'll talk about that in a minute. So first of all you can do, he's "Not attached" to anything. And that way, it's just a stand alone system. Then, you can do what's called a bridged adapter, and it's going to directly connect to a real network card on my system. Let me show you what bridged network really means. Here's my host computer and here, it's got a real network card in here attached to an ethernet network. When we bridge the virtual machine, what we're doing is we're, in essence, installing a virtual network card onto the exact same network, and it goes through my real computer. This virtual network card is just the same as if he's plugged into the same switch as your real computer. So if this computer is getting network IDs of 192.168.4s from a DHCP server, this guy will, too. So you, literally, have him, your virtual machine, joining the same network as your host computer. So bridged is often a really popular way to do things, but we got more. The next one is NAT. Now with NAT, what you're actually doing is you're creating a virtual router. Let me show you how NAT works. With NAT, a virtual router is created. Now you can't actually see this virtual router, but it's there. And it connects in here, and it creates its own little network ID. Which, on this particular hypervisor, is always 10.0.0 something. And that way, this is NAT'd out, and it really treats your individual physical host computer as your internet service provider. The only problem with NAT is that it only allows you to connect one computer to this virtualized network ID. What if you have like three virtual machines and you want them to all be on their own little network going through their own little virtual router? And that's where NAT networks come into play. So to do a NAT network, we just click on NAT Network. And then, we've gotta give this a name. So here's where we get a little bit of an extra feature. I'm gonna cancel this for a moment. We're gonna go back into the main thing, and let's head over to Tools. And here, we can set up some Preferences, in particular, networks. And here's where we can set up, what we call, individual networks. I'm gonna create one right now, and I'm going to call him something more creative than NATNetwork1. So I'm gonna call it Tempo. (laughing) There we go. And here's where I can actually set up the DHCP server part of the router. So I want it to pass out 10.11.12s, and the whack 24 means 255.255.255.0. I can set it up so it will act as a DHCP server. I can even set it to support IPv6, and it'll take whatever IPv6 information is coming from the host system. And I'll just go ahead and leave that off for now. And we can take a look at NatNetwork over here, and he's passing out 10.0.2 on his. So I can create two completely separate networks. Get the idea? Each passing out their own DHCP server, passing out whatever network ID we want to them, and we could do some pretty cool stuff with this. But we have to get these networks set up first, and now we can go back to NAT Networking. Alright, so let's go back to Settings. Let's go back to Network, and we'll see that I want it to be on a NAT Network. And I'm gonna say I want it to be on Tempo. He's now automatically going to be getting whatever is being passed out by the virtualized routers DHCP server. Let me show you how that looks. So now we have these two NAT'd networks, and they each have a virtual router built into them. Tempo, this router has a DHCP server built into it, and he's passing out 10.11.12s. And he's hooked in to your host system who's acting as an ISP. And then, we also have NatNetwork. The problem is, is until we add computers to these, there's nothing in these networks. So you make a network, and then you start creating virtual machines and you populate these networks. So if I want this guy to be a part of that network, that's where I put him into it. Or I can put him back in the other one, as far as I'm concerned. So you can really do some powerful features with that. There's a few other settings for networking. Let me just bounce through these really, really quick. An Internal Network means you're going to have a bunch of computers on an internal network, but there will be no router out to the internet through your own computer. It's just going to be its own little internal network. Host-only Adapter means it's going to be directly connected to the particular host network card, and that's something you probably want to avoid using. And then, there's a Generic Driver, and this is where it's going to pretend to be a different kind of network card. Generic drivers are often used if you've got some really old operating system. You're trying to get it to run in a virtual machine, and it doesn't know about modern network cards. You can actually go in and have it pretend to be a different kind of network card. That's actually emulation. So this is one spot where a virtualized system, actually, does an emulation, because it pretends to be a totally different network card than what you have. Look, the bottom line is that working with virtual machines is a lot of fun. It is an incredible tool. You should be using this heavily to practice for your A+ exam, in all kinds of stuff. Mass storage, networking, practicing with DHCP, you can do all of this on one computer if you use good virtual machines. Speaker 1: And if you're considering building an application in the cloud, or perhaps, using cloud computing in your currently networked environment, or building an entire infrastructure out in the cloud as well, keep in mind that a lot of the security requirements and concerns are very similar to self-hosted devices as well. So for instance, we want to provide proper access control. We want to control the users that are accessing those systems and also control what access they have within those systems, what locations they can go to, what files or folders they can access, what applications they can use, things like that. We also want to make sure that these applications, and servers, and everything are kept patched and up to date, so that we're not vulnerable to any possible known exploits, and are, hopefully, a little bit protected from unknown exploits as well. We want to be able to audit all this along the way, right? So people that are logging into these servers or people that are accessing these applications, we want to be able to have some sort of security auditing there, where we can view those logs and make, you know, judge who has access, who needs to have access, and make sure there's, you know, no breaches or anything that we need to be concerned about. And we also need to have, you know, some way to recover stuff if things go bad, right? The cloud computing backups and stuff are great, but it's also good to have physical copies of your own stuff as well. So just keep in mind the security requirements for cloud computing are the same for physically hosted devices. And as long as you keep those in mind while building out your cloud infrastructure, you'll have no problem at all.