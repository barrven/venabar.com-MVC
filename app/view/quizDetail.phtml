<main class="container">
    <h1 class="mb-2">Infini Quiz</h1>
    <div id="inputGroup"></div>
    <div id="btnGroup" class="mt-3" hidden>
        <button id="btnSubmit" class="btn btn-primary" onclick="handleSubmit()">Submit</button>
        <button class="btn btn-success" onclick="handleNextClick()">Next</button>
    </div>

</main>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="js/quiz-detail.js"></script>
<script>
    // add the local stylesheet
    $('<link>', {
        rel: 'stylesheet',
        type: 'text/css',
        href: 'style/localStyles/quiz.css' 
    }).appendTo('head');

    // for loading bar animation
    $('<link>', {
        rel: 'stylesheet',
        type: 'text/css',
        href: 'style/widgets.css' 
    }).appendTo('head');

    let data = {status: 'loading'};
    renderInputGroup();
    loadQuiz();

    async function loadQuiz(){
        data = await callAPI();
        data.status = 'loaded';
        console.log('loadQuiz: loaded.', data);
        renderInputGroup();
    }

    function renderInputGroup(){
        if(data.status === 'loading'){
        // if(true){

            $('#inputGroup').html(`
                <div class="loader-container">
                    <div class="progress-bar">
                        <div class="progress"></div>
                    </div>
                </div>
            `);
            
            $('#btnGroup').attr('hidden', true);

            return;
        }
        
        if(!isValidData()){
            console.log('renderInputGroup isValidData? ','No valid data to render.');
            if(data.hasOwnProperty('error')){
                renderErrorMsg(`An error occurred: "${data.error}"`);
            }
            return;
        }
        
        $('#inputGroup').empty();
        const question = $('<h5>', { 
            text: `${data.questionText}`,
            class: 'mt-3 mb-3'
        });
        $('#inputGroup').append(question);

        data.options.forEach((item)=>{
            const label = $('<label>',{
                text: `${item.id}. ${item.optionText} `,
                class: 'rdoInput-label'
            });
            
            rdoInput = $('<input>', {
                type: 'radio',
                name: 'options',
                value: `${item.id}`,
                hidden: true,
                change: ()=>{
                    let rs = document.querySelectorAll('input');
                    rs.forEach((i)=>{
                        if(i.checked){
                            i.parentElement.classList.add('rdoInput-label-selected');
                        } else {
                            i.parentElement.classList.remove('rdoInput-label-selected');
                        }

                    })
                }
            });
            
            const br = $('<br>');

            label.append(rdoInput);
            $('#inputGroup').append(label, br);            
        });

        $('#btnGroup').removeAttr('hidden');

    }

    function renderErrorMsg(msg){
        console.error('renderErrorMsg: ',msg);
        $('#inputGroup').empty();
        const p = $('<p>', { class: 'error-msg', text: msg});
        $('#inputGroup').append(p);
    }

    function handleNextClick(){
        document.location.reload();
    }

    function handleSubmit(){
        const selectedOption = document.querySelector('input[name="options"]:checked');
        const pResult = $('<p>', {
            class: 'result-text mt-3 text-center'
        });

        if(selectedOption.value == data.correct_answer) {
            pResult.text('Correct!')
            pResult.addClass('text-success');
            // todo: log result

        } else {
            pResult.text('Incorrect.')
            pResult.addClass('text-danger');
        }
        
        const pExplanation = $('<p>', {
            text: `${data.answerExplanationText}`,
            class: 'mt-3'
        })

        $('#inputGroup').append(pResult, pExplanation);
        $('#btnSubmit').hide();
    }

    function isValidData(){

        if(!data.hasOwnProperty('options')){
            return false;
        }

        return true;
    }
    
</script>
